<?php

/*
 * Implement hook menu
 */
function zb_henri_menu() {
    $items['hello'] = array(
        'title' => 'Hello world!',
        'page callback' => 'helloworld_page',
        'access callback' => TRUE,
    );
    $items['admin/commerce/config/shipping/zb_shipping_config'] = array(
        'title' => t('My form'),
        'access arguments' => array('administer shipping'),
        'type' => MENU_LOCAL_TASK,
        'page callback' => 'drupal_get_form',
        'page arguments'=> array('zb_henri_shipping_config_form')
    );
    return $items;
}

/*
 * DEVELOPMENT PURPOSES
 * @action make sure if module is working
 * PLEASE REMOVE THESE FUNCTIONS
 */
function helloworld_page() {
    echo 'zb_henrisusanto';
}

/*
 * implement hook_commerce_shipping_service_info_alter
 * @action redirect callback function of any services
 */
function zb_henri_commerce_shipping_service_info_alter(&$shipping_services) {
    foreach ($shipping_services as $name => $detail) {
        $shipping_services[$name]['callbacks']['rate'] = 'zb_henri_zb_shipping_policy';
    }
}

/*
 * Callback function to Implement Zaner Bloser shipping policy
 * @return calculated shipping rate
 */
function zb_henri_zb_shipping_policy($shipping_service, $order) {
    module_load_include('php', 'zb_henri', '/classes/shipping');
    $shipping = new shipping();
    return $shipping->getShippingPrice($order);
}


/*
 * implement hook_field_create_instance
 * @action update product line and product category sorting field base on product display fields
 *          everytime somebody add a field into product display
 */
function zb_henri_field_create_instance($instance) {    
    module_load_include('php', 'zb_henri', '/classes/sorting');
    $sorting = new sorting();
    if ($sorting->product_display['content_type_name'] == $instance['bundle'])
        $sorting->updateSortingOptions();
}

/*
 * implement hook_views_api
 * @action use CUSTOM_MODULE_NAME.views.inc file
 */
function zb_henri_views_api() {
    return array(
        'api' => 2,
        'path' => drupal_get_path('module', 'zb_henri'),
    );
}

function zb_henri_shipping_config_form() {
    $current_config = variable_get('zb_shipping_config');
    $form['zb_shipping_amount'] = array(
        '#type' => 'textfield',
        '#title' => t('Shipping amount ($)'),
        '#required' => TRUE,
        '#default_value' => null == $current_config ? 5 : $current_config['zb_shipping_amount'],
    );
    $form['zb_shipping_percentage'] = array(
        '#type' => 'textfield',
        '#title' => t('Shipping percentage (%)'),
        '#required' => TRUE,
        '#default_value' => null == $current_config ? 9 : $current_config['zb_shipping_percentage'],
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Save',
    );
    return $form;
}

function zb_henri_shipping_config_form_submit($form, &$form_state){
    foreach(array('zb_shipping_amount','zb_shipping_percentage') as $config)
        $zb_shipping_config[$config] = $form_state['values'][$config];
    variable_set('zb_shipping_config', $zb_shipping_config);
}